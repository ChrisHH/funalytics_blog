{
  "hash": "3bb542dcc516f0bfb18c3d1dd97a10fb",
  "result": {
    "markdown": "---\ntitle: \"Flight LH790 (MUC - SIN)\"\nauthor: Christian Jaehnert\ndate: '2023-11-26'\nformat: html\nslug: \ncategories:\n  - R\n  - ggplot\n  - tidyverse\n  - aviation\n  - MUC\n  - SIN\n  - flights\ntags:\n  - R\n  - ggplot\n  - aviation\n  - travel\n  \nsummary: \"This shows an analyis to book the best side of the plane to approach Singapore.\"\n---\n\n\n\n\n## Introduction\n\nHello, it's been a while since my last post! You remember the bears in Canada? üêª\n\nHowever, both this post and the last one share a common theme: they're about my upcoming travels.\\\nI'm eagerly anticipating my trip to Singapore. As a fan of the city, I want to start enjoying it right from the moment of my arrival, which means catching a glimpse of the skyline as the plane approaches Changi Airport.\n\nGiven the airport is located to the east of the city, a south-west approach typically offers the most scenic vistas. The question is: What is the likelihood that I will see this view, sitting on the left side of the plane?\n\n![*Source: Swapnil Bapat on Unsplash.com*](singapore_skyline.jpg){fig-align=\"center\"}\n\n**Thankfully, data is here to help! I invite you to join me on this analytical journey.** ‚úàÔ∏è\n\n## Data\n\nMy flight to Singapore is with Lufthansa, departing from Munich. I'll be on flight LH790, a service offered six times per week using the very fuel-efficient A350.\n\nAviation is a passion of mine, so I have a gold membership at [www.flightradar24.com](http://www.flightradar24.com/). ü§ì This enables the download of the flight path for each flight over the past 365 days. I downloaded the data for the last 80 days' flights of LH790. Let's first look at the variables and the date range.\n\n::: {.panel-tabset .nav-pills}\n## Variables\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-1_82a68e77e97bdde733a2113797c822f1'}\n::: {.cell-output .cell-output-stdout}\n```\nRows: 115,502\nColumns: 13\n$ timestamp     <dbl> 1691784874, 1691784882, 1691784892, 1691784903, 16917849‚Ä¶\n$ utc           <dttm> 2023-08-11 20:14:34, 2023-08-11 20:14:42, 2023-08-11 20‚Ä¶\n$ callsign      <chr> \"DLH790\", \"DLH790\", \"DLH790\", \"DLH790\", \"DLH790\", \"DLH79‚Ä¶\n$ lat           <dbl> 48.35789, 48.35788, 48.35789, 48.35790, 48.35798, 48.358‚Ä¶\n$ lon           <dbl> 11.79256, 11.79278, 11.79301, 11.79330, 11.79355, 11.793‚Ä¶\n$ altitude      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,‚Ä¶\n$ speed         <dbl> 3, 4, 4, 4, 4, 4, 0, 0, 4, 5, 6, 6, 12, 13, 14, 15, 15, ‚Ä¶\n$ direction     <dbl> 261, 255, 244, 225, 208, 182, 174, 174, 174, 174, 174, 1‚Ä¶\n$ file_name     <chr> \"LH790_318ce2d1.csv\", \"LH790_318ce2d1.csv\", \"LH790_318ce‚Ä¶\n$ weekday       <ord> Fri, Fri, Fri, Fri, Fri, Fri, Fri, Fri, Fri, Fri, Fri, F‚Ä¶\n$ weekday_start <ord> Fri, Fri, Fri, Fri, Fri, Fri, Fri, Fri, Fri, Fri, Fri, F‚Ä¶\n$ date_start    <date> 2023-08-11, 2023-08-11, 2023-08-11, 2023-08-11, 2023-08‚Ä¶\n$ label         <chr> \"LH790 2023-08-11\", \"LH790 2023-08-11\", \"LH790 2023-08-1‚Ä¶\n```\n:::\n:::\n\n\n## Flight Dates\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-2_f859c0563a5afce0ceb99c3d66ad42f3'}\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"2023-08-11\" \"2023-08-13\" \"2023-08-14\" \"2023-08-15\" \"2023-08-16\"\n [6] \"2023-08-17\" \"2023-08-18\" \"2023-08-20\" \"2023-08-21\" \"2023-08-22\"\n[11] \"2023-08-23\" \"2023-08-24\" \"2023-08-25\" \"2023-08-27\" \"2023-08-28\"\n[16] \"2023-08-29\" \"2023-08-30\" \"2023-08-31\" \"2023-09-01\" \"2023-09-03\"\n[21] \"2023-09-04\" \"2023-09-06\" \"2023-09-07\" \"2023-09-08\" \"2023-09-10\"\n[26] \"2023-09-11\" \"2023-09-13\" \"2023-09-14\" \"2023-09-15\" \"2023-09-17\"\n[31] \"2023-09-18\" \"2023-09-20\" \"2023-09-21\" \"2023-09-22\" \"2023-09-24\"\n[36] \"2023-09-25\" \"2023-09-27\" \"2023-09-28\" \"2023-09-29\" \"2023-10-01\"\n[41] \"2023-10-02\" \"2023-10-04\" \"2023-10-05\" \"2023-10-06\" \"2023-10-08\"\n[46] \"2023-10-09\" \"2023-10-11\" \"2023-10-12\" \"2023-10-13\" \"2023-10-15\"\n[51] \"2023-10-16\" \"2023-10-18\" \"2023-10-19\" \"2023-10-22\" \"2023-10-23\"\n[56] \"2023-10-25\" \"2023-10-26\" \"2023-10-27\" \"2023-10-29\" \"2023-10-30\"\n[61] \"2023-10-31\" \"2023-11-01\" \"2023-11-02\" \"2023-11-03\" \"2023-11-05\"\n[66] \"2023-11-06\" \"2023-11-07\" \"2023-11-08\" \"2023-11-09\" \"2023-11-10\"\n[71] \"2023-11-12\" \"2023-11-13\" \"2023-11-14\" \"2023-11-15\" \"2023-11-16\"\n[76] \"2023-11-17\" \"2023-11-19\" \"2023-11-20\" \"2023-11-21\" \"2023-11-22\"\n```\n:::\n:::\n\n:::\n\nThe data is already quite impressive. From just 80 flights, I've gathered 115,502 data points, averaging about 1,444 per flight. So, what do we have?\n\nThe timestamp and UTC provide the time information. Latitude (Lat) and Longitude (Lon) show the position of the plane at a certain timestamp/UTC. There's also data on speed (in knots), altitude (in feet), and direction (heading) for that moment.\n\nI've already derived some additional variables that might be useful or interesting, such as the weekday, the weekday of departure from Munich (since the date line is crossed during the flight), and a unique label for each flight.\n\nThe following analysis is based on the LH790 flights from 2023-08-11 to 2023-11-22. That is a difference of 103 days. But since the connection is not offered every day, we only look into the last 80 flights in this date range.\n\nNow its time to jump into the data!\n\n## Speed & Altitude\n\nLet's scatter both variables, speed and altitude, from the 80 flights.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-3_2adf2bdbd3589986b5c886c2d077f803'}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=1260}\n:::\n:::\n\n\nThe plot of speed versus altitude is intriguing. It clearly shows takeoff and landing phases (speed \\> 0 at altitude = 0). It appears the plane takes off at around 150 knots, as that's when altitude begins to increase (vice versa for landing).\n\nThere seems to be a linear relationship between speed and altitude, which is intuitive. But why does it form a funnel shape? This warrants further investigation. My theory is that there's a different relationship (scatter) during the three flight stages:\n\n1.  Takeoff/Climb\n\n2.  Cruise\n\n3.  Landing/Descent\n\nI don't have stage information in the dataset, so I derived it, after removing some of the strange points in the scatter plot (very low speed at high altitude). See the following code.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-4_a4e8fc54c241b256789432f167170769'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Click here to unhide/hide the code.\"}\nall_data <- all_data %>% \n  filter(!(altitude > 100 & speed < 100)) %>% \n  filter(!(altitude > 30000 & speed < 400)) %>% \n  group_by(file_name) %>% \n  arrange(timestamp) %>%\n  mutate(altitude_before = lag(altitude, default = 0),\n         altitude_after = lead(altitude))  %>% \n  filter(!(altitude == 0 & altitude_before == 0 & altitude_after == 0)) \n\nall_data <- all_data %>% \n  group_by(label) %>% \n  arrange(utc, .by_group = TRUE) %>% \n  mutate(startzeit = utc[1], \n         flugdauer = difftime(utc, startzeit, units = \"mins\"),\n         flugdauer = as.numeric(flugdauer))\n\n\ntakeoff_threshold = 10    \nlanding_threshold = -10\n\nall_data <- all_data %>% \n  mutate(gradient = c(NA, diff(altitude) / diff(flugdauer)),\n         smooth_gradient = rollmean(gradient, 5, fill = NA)) %>% \n  mutate(phase = case_when(\n    smooth_gradient > takeoff_threshold ~ 'Climb',\n    smooth_gradient < landing_threshold ~ 'Descend',\n    TRUE ~ 'Cruise'\n  ))\n```\n:::\n\n\nWhats going on in the code? After cleaning up of the anomalies in the data, I focused on calculating the relative length of the flight since takeoff. To clarify, I'm considering 'takeoff' as the last moment when the altitude is zero and eliminating all prior data points, effectively excluding the taxiing phase (same applies for the landing).\n\nThe next step is to calculate the gradient, which involves correlating the change in altitude with the change in the relative length of the flight. The sign of this gradient indicates whether the plane is ascending or descending between two points. After this, I smooth out the gradient for a clearer analysis. The sign of this gradient indicates whether the flight is ascending or descending.\n\nLet's now revisit the plot, this time analyzing it by the flight phase.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-5_fc987d9f835fba6bbcdc1e37559590b4'}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=1260}\n:::\n:::\n\n\nThe results are fascinating! The climb phase (red) requires higher speed to gain altitude, as governed by physical laws, as it sits more towards the right side (higher speed).\n\nWhat's particularly striking is the precision with which the plane maintains altitude at different speeds during the cruise phase (green lines).\n\n## Altitude and Duration\n\nI need to take a closer look at this aspect of maintaining stable altitude.\n\nTherefore, I am plotting the plane's altitude against flight time (measured in minutes).\n\nI will present a summary encompassing all flights, and for enhanced clarity, I will also showcase randomly selected flights throughout this article (you can switch between the different views using the tabs).\n\n::: {.panel-tabset .nav-pills}\n## All Flights\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-6_5bb7c5c864b18ba2c29fcf36d282b616'}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=1260}\n:::\n:::\n\n\n## Random Flights\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-7_adeaa6aa740be0f72a53f67acf3c845f'}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=1260}\n:::\n:::\n\n:::\n\nIt's amazing to see how the plane maintains a consistent altitude over an extended period of time. Yes, I'm aware there are minor deviations in altitude, or even significant ones during turbulence. The plot here is somewhat smoothed out due to the resolution of the measurement and also the range of the X- and Y-axis, but I'm still impressed.\n\n::: callout-note\nWhat can also be observed is that sometimes the altitude profile has gaps. This is due to the absence of data points in some instances. The reason for this is that Flightradar24 cannot track signals in certain areas of the world (e.g. ocean areas).\n:::\n\nUpon further analysis, I noticed an anomaly on the flight dated November 19th. A quick check on Flightradar24 revealed that on that day, the plane was diverted to Kuala Lumpur after two unsuccessful landing attempts due to bad weather at the airport. I'll exclude this flight from the rest of the analysis.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-8_95b53d8fbc154da2cf2381a987d1a4e9'}\n\n:::\n\n\n## Approaching Singapore\n\nLet's now turn our attention to the initial question regarding the likelihood of having the best view of Singapore's skyline, and take a closer look at the local conditions in more detail.\n\n![Source: Google Maps](images/Folie1.png){fig-align=\"center\"}\n\nAs indicated on the map and mentioned earlier, if the approach is from the southwest (shown by the purple arrow), then the left side of the plane provides a good view of the skyline. On the other hand, for a northeast approach (marked by the orange arrow), it's recommended to sit on the right side to catch a glimpse of the city, even if it's not the full, impressive skyline.\n\nWhat needs to be done now is to determine the approach direction for each flight in order to calculate the likelihood of getting the best view. How do I do that?\n\nFrom the flight path I examined the final descent phase, specifically when the plane was below 2,000 feet (\\~ 600 m) in altitude, because at that stage I would expect (and hope üòÉ) that the plane is already fully aligned with the runway! Let's first see if this expectation holds true!\n\n::: {.panel-tabset .nav-pills}\n## All Flights\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-9_211e00db1b6a1633707fcc5275f52e93'}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=1260}\n:::\n:::\n\n\n## Random Flights\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-10_3b20a6f4eee9c20c33b0006b3dd803cb'}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=1260}\n:::\n:::\n\n:::\n\nThe yellow point marks the location of the renowned Marina Bay Sands, while the green dot signifies the official location of Singapore Airport. It is very evident that at an altitude of 2,000 feet, the aircraft is already perfectly aligned with the runway (blue points form a perfect line). Additionally, it is observable that there is a singular direction offering a prime view of the skyline: the approach from the southwest (like we already know).\n\n::: callout-note\nThere is multiple runways at Singapore, thats why the line is shifted from day to day.\n:::\n\nNow, all I need to do is classify each approach to easily tally them up. And here's the concept: if the average latitude of the approach is less than the latitude of Singapore airport, then the approach is likely from the northeast. Conversely, if it's higher, the approach is probably from the southeast. This must be adjusted to the specific airport (could be different if there are crossing runways). Let's calculate and see what the results show.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-11_956b3a787c49df177c1c79452befcf9e'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Click here to unhide/hide the code.\"}\nflights_direction <- all_data %>%\n  group_by(label) %>% \n  filter(phase == \"Descend\" & altitude < 2000) %>% \n  group_by(label) %>%\n  summarize(approach_direction = if_else(mean(lat) > 1.359167, \n                                         'north-east', \n                                         'south-west'))\n```\n:::\n\n\nNow, let's proceed to verify if the \"classification\" is accurate by conducting a graphical inspection (this time without the Marina Bay Sands, but only the airport as a green point).\n\n::: {.panel-tabset .nav-pills}\n## All Flights\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-12_c47b7ffbd92ecea9b5f79a839a9c75ff'}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=1260}\n:::\n:::\n\n\n## Random Flights\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-13_def8474e106db06e4e149982b05070b8'}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=1260}\n:::\n:::\n\n\n## Result\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-14_58a9672c7ecbb7b59ffa0f29b3bfe1fe'}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=1260}\n:::\n:::\n\n:::\n\nTo clarify the legend: the approach always refers to the *incoming* direction. So, \"south-west\" means that the approach is being made from the southwest direction (as you can see in the plot). As mentioned earlier, the approach from the southwest offers the best view of the skyline, but **it turns out, disappointingly, that only \\~ 25% of the 80 flights are approached from this direction.\\\n\\\nWhat a pitty** üò•.\n\nBut wait, there might be another opportunity! Considering that Singapore Changi Airport is very busy, this might lead planes into holding patterns. Perhaps while circling in these holding patterns, there's a chance to catch a glimpse of the skyline. Let's investigate this possibility!\n\n## Holdings\n\nTo analyze holding patterns, I will examine the final 30 minutes of each flight. Let's plot their routes for further insights.\n\n::: {.panel-tabset .nav-pills}\n## All Flights\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-15_3fed63c07e466fd795a79ff766ae597a'}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){width=1260}\n:::\n:::\n\n\n## Random Flights\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-16_afeff15b32f21595cec2aad21836f0a2'}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){width=1260}\n:::\n:::\n\n:::\n\nSome flights exhibit distinct holding patterns prior to landing, identifiable by their bow-shaped paths. Interestingly, it appears that sometimes, even when the approach is from the northeast, there might be a chance to see the skyline. However, it's important to consider the differences in altitude when passing by, as well as the actual distance. Although it may seem relatively close on the small diagram, in reality, the distance could be significantly larger. But let's set that aside for now.\n\nThe next step involves classifying each flight to determine whether it follows a holding pattern. For those flights that do have a holding pattern, we need to check if this occurs near the skyline. This will help us assess the likelihood of passengers getting a view of the skyline during these patterns.\n\n## **Derivation of Holdings**\n\nTo identify holding patterns, the focus is narrowed to the last 30 minutes of each flight, during which significant changes in the *bearing* could indicate circling or looping maneuvers. The analysis starts by organizing the flight data chronologically for each flight. The bearing, or direction of travel, from one point to the next is calculated for the entire flight path. If there is a high number of *consecutive changes* (to the prior way point) in the bearing, this might indicate a holding pattern.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-17_dfd29ff82fa23b75c606d240f85320d5'}\n\n:::\n\n\n::: callout-tip\nIn order to compute the bearing I used the geosphere library.\n\nHijmans R (2022). *geosphere: Spherical Trigonometry*. R package version 1.5-18, <https://CRAN.R-project.org/package=geosphere>.\n:::\n\nTo see if the indicator works, let's check with the randomly chosen flights.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-18_a28e6614d9eefee108661355c8ca34a2'}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-1.png){width=1260}\n:::\n:::\n\n\nThat looks quite promising. I've experimented a bit and established a rule: if there are more than 30 *consecutive* points showing a change in direction, I classify the flight as one having a holding pattern.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-19_61ff90f47f60539ee2981e157051e351'}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-19-1.png){width=1260}\n:::\n:::\n\n\nThe approach seems to work reasonably well, though undoubtedly there could be more sophisticated solutions. I focus on the flights with a holding patterns and the approach from the north-east from here on now; again on a plot.\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-20_98c58726792d97ac5cfb0842a89fa4b7'}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-20-1.png){width=1260}\n:::\n:::\n\n\nWhat I have to do now, is to calculate the mean altitude from the center of each holding pattern and the distance to the skyline (yellow point).\n\nNow, I will plot only the center of each detected holding pattern for each remaining flight, considering only those patterns that are a maximum of 20,000 meters away (at any mean altitude). Let's see if there are any patterns close to the skyline (indicated by the yellow point) at an altitude suitable for observing the skyline (one must consider the cloud cover). On the scatterplot I look into holdings at an altitude of lower than 6,500 ft (assuming this has chance to be below the cloud cover) to check how far/distant they are from the skyline.\n\n::: panel-tabset\n## Flightpath\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-21_6ef7ad1a1d45176e1f853fb6a1ea153e'}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-21-1.png){width=1260}\n:::\n:::\n\n\n## Scatterplot\n\n\n::: {.cell hash='index_cache/html/unnamed-chunk-22_0a50edf3846939b562be602a14a2ab78'}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-22-1.png){width=1260}\n:::\n:::\n\n:::\n\nOkay, that's quite clear! The altitude is acceptable. **However, it seems that holding patterns won't be helpful in this case.** As observed, there is no helpful center of a holding pattern close to the yellow point, which would indicate it being within a radius of 20,000 meters. So, unfortunately, holding patterns do not provide an opportunity to view the skyline in this scenario. This is confirmed by the scatter plot. Yes, there are holding patterns below the 6,500 ft but the majority at a higher distance.\n\n::: callout-note\nHoldings close to the green point (representing the airport) and at an altitude of zero are actually turns made during taxiing. This serves as further evidence that the detection of holding patterns can be improved. It highlights the need to differentiate between actual holding patterns in the air and movements on the ground to enhance the accuracy of the analysis.\n:::\n\n## Conclusion\n\nI thoroughly enjoyed analyzing this once again. I hope you found it enjoyable too! I'm definitely planning to sit on the left side of the plane, fingers crossed for that 25% chance. I'm aware there will be holdings, but I don't expect them to be much help to see Singapore's skyline. Speaking of holdings, I'll ponder over ways to improve, especially if part of the route involves a holding pattern. This has certainly piqued my interest in delving into the realm of geodistance calculations.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}